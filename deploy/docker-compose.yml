version: "3.8"

services:
  caddy:
    image: caddy:alpine
    container_name: trove-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend
    networks:
      - trove-network

  db:
    image: postgres:15-alpine
    container_name: trove-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trove-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    image: ${GCR_HOSTNAME}/${GCP_PROJECT_ID}/${REPO_NAME}/trove-backend:${IMAGE_TAG}
    container_name: trove-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://postgres:postgres@trove-db:5432/postgres
      NODE_ENV: production
    depends_on:
      - db
    networks:
      - trove-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: ${GCR_HOSTNAME}/${GCP_PROJECT_ID}/${REPO_NAME}/trove-frontend:${IMAGE_TAG}
    container_name: trove-frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - trove-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    env_file:
    - .env

  dbt:
    build: ./db
    volumes:
      - ./db/dbt_project:/app
    depends_on:
      - db
    networks:
      - trove-network
    environment:
      DBT_PROFILES_DIR: /app/profiles
    entrypoint: ["dbt"]
    command: ["build", "--profiles-dir", "/app/profiles"]

volumes:
  postgres_data:
  caddy_data:
  caddy_config:

networks:
  trove-network:
    driver: bridge 