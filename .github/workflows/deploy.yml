name: Deploy to Demo Environment

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      deploy_ref:
        description: 'Git ref to deploy (branch, tag, or SHA)'
        required: true
        default: 'main'

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCR_HOSTNAME: us-central1-docker.pkg.dev
  REPO_NAME: trove-repo
  DOMAIN: ${{ secrets.DOMAIN }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: demo
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.deploy_ref || github.ref }}

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GCR_HOSTNAME }} --quiet

      - name: Build and push frontend image
        run: |
          docker build -f frontend/prod.Dockerfile -t ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/trove-frontend:${{ env.IMAGE_TAG }} frontend/
          docker push ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/trove-frontend:${{ env.IMAGE_TAG }}
          docker tag ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/trove-frontend:${{ env.IMAGE_TAG }} \
                    ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/trove-frontend:latest
          docker push ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/trove-frontend:latest

      - name: Build and push backend image
        run: |
          docker build -t ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/trove-backend:${{ env.IMAGE_TAG }} backend/
          docker push ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/trove-backend:${{ env.IMAGE_TAG }}
          docker tag ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/trove-backend:${{ env.IMAGE_TAG }} \
                    ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/trove-backend:latest
          docker push ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/trove-backend:latest

      - name: Setup deployment directory
        uses: google-github-actions/ssh-compute@v0
        with:
          instance_name: ${{ secrets.DEPLOY_INSTANCE_NAME }}
          zone: ${{ secrets.GCP_ZONE }}
          ssh_private_key: ${{ secrets.DEPLOY_SSH_KEY }}
          command: |
            mkdir -p ~/deploy/

      - name: Upload deployment files to instance
        run: |
          gcloud compute scp --recurse deploy/* ${{ secrets.DEPLOY_INSTANCE_NAME }}:~/deploy/ --zone=${{ secrets.GCP_ZONE }}

      - name: Set environment variables
        uses: google-github-actions/ssh-compute@v0
        with:
          instance_name: ${{ secrets.DEPLOY_INSTANCE_NAME }}
          zone: ${{ secrets.GCP_ZONE }}
          ssh_private_key: ${{ secrets.DEPLOY_SSH_KEY }}
          command: |
            echo 'DOMAIN=${{ env.DOMAIN }}' > ~/deploy/.env
            echo 'EMAIL=${{ secrets.DEPLOY_EMAIL }}' >> ~/deploy/.env
            echo 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}' >> ~/deploy/.env
            echo 'GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}' >> ~/deploy/.env
            echo 'GCR_HOSTNAME=${{ env.GCR_HOSTNAME }}' >> ~/deploy/.env
            echo 'REPO_NAME=${{ env.REPO_NAME }}' >> ~/deploy/.env
            echo 'IMAGE_TAG=${{ env.IMAGE_TAG }}' >> ~/deploy/.env
            echo 'BACKEND_URL=${{ env.BACKEND_URL }}' >> ~/deploy/.env

      - name: Deploy application
        uses: google-github-actions/ssh-compute@v0
        with:
          instance_name: ${{ secrets.DEPLOY_INSTANCE_NAME }}
          zone: ${{ secrets.GCP_ZONE }}
          ssh_private_key: ${{ secrets.DEPLOY_SSH_KEY }}
          command: |
            cd ~/deploy && \
            chmod +x ./deploy.sh && \
            ./deploy.sh

      - name: Verify Deployment
        uses: google-github-actions/ssh-compute@v0
        with:
          instance_name: ${{ secrets.DEPLOY_INSTANCE_NAME }}
          zone: ${{ secrets.GCP_ZONE }}
          ssh_private_key: ${{ secrets.DEPLOY_SSH_KEY }}
          command: |
            cd ~/deploy && ./deploy.sh status

      - name: Cleanup old images
        if: success()
        uses: google-github-actions/ssh-compute@v0
        with:
          instance_name: ${{ secrets.DEPLOY_INSTANCE_NAME }}
          zone: ${{ secrets.GCP_ZONE }}
          ssh_private_key: ${{ secrets.DEPLOY_SSH_KEY }}
          command: |
            docker system prune -af --filter 'until=168h' 